<!DOCTYPE html>
<html lang="zh-TW">
<head>
  <meta charset="UTF-8">
  <title>3D 三層平面圖 - 可見成功版</title>
  <style>
    body { margin: 0; overflow: hidden; background: #222; }
    #msg {
      position: fixed;
      top: 10px; left: 10px;
      color: #0f0;
      background: rgba(0,0,0,0.6);
      padding: 6px 10px;
      border-radius: 8px;
      font-family: monospace;
      font-size: 14px;
    }
  </style>
</head>
<body>
<div id="msg">載入中...</div>
<script src="https://cdn.jsdelivr.net/npm/three@0.160.0/build/three.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/three@0.160.0/examples/js/controls/OrbitControls.js"></script>

<script>
  const scene = new THREE.Scene();
  scene.background = new THREE.Color(0x222222);

  const camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 0.1, 3000);
  camera.position.set(600, 800, 600); // 從斜上方看下來
  camera.lookAt(0, 0, 0);

  const renderer = new THREE.WebGLRenderer({ antialias: true });
  renderer.setSize(window.innerWidth, window.innerHeight);
  document.body.appendChild(renderer.domElement);

  const controls = new THREE.OrbitControls(camera, renderer.domElement);
  controls.target.set(0, 0, 0);
  controls.enableDamping = true;

  // === 光源 ===
  const light = new THREE.DirectionalLight(0xffffff, 1);
  light.position.set(300, 600, 300);
  scene.add(light);
  scene.add(new THREE.AmbientLight(0x555555));

  // === 樓層設定 ===
  const floorFiles = [
    { file: 'floor1.svg', height: 0,   color: 0x33aaff },
    { file: 'floor2.svg', height: 100, color: 0x33ffaa },
    { file: 'floor3.svg', height: 200, color: 0xffaa33 }
  ];

  const loader = new THREE.TextureLoader();

  floorFiles.forEach((f) => {
    // 預設為色塊地板
    const material = new THREE.MeshBasicMaterial({
      color: f.color,
      transparent: true,
      opacity: 0.6,
      side: THREE.DoubleSide
    });

    // 嘗試載入平面圖（如果有圖就蓋上貼圖）
    loader.load(
      f.file,
      (texture) => {
        material.map = texture;
        material.opacity = 0.9;
        material.needsUpdate = true;
      },
      undefined,
      () => console.warn(`⚠️ 無法載入 ${f.file}，以顏色代替`)
    );

    const plane = new THREE.Mesh(
      new THREE.PlaneGeometry(1000, 1000),
      material
    );
    plane.rotation.x = -Math.PI / 2; // 轉成水平地板
    plane.position.y = f.height;
    scene.add(plane);
  });

  // === 加一個彩色立方體方便定位 ===
  const box = new THREE.Mesh(
    new THREE.BoxGeometry(50, 50, 50),
    new THREE.MeshNormalMaterial()
  );
  box.position.set(0, 25, 0);
  scene.add(box);

  // === 坐標輔助線 ===
  const axes = new THREE.AxesHelper(500);
  scene.add(axes);

  // === 視窗自適應 ===
  window.addEventListener('resize', () => {
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight);
  });

  // === 主動畫 ===
  function animate() {
    requestAnimationFrame(animate);
    controls.update();
    renderer.render(scene, camera);
  }
  animate();

  document.getElementById('msg').innerText = '✅ 成功載入！可用滑鼠旋轉、滾輪縮放';
</script>
</body>
</html>
