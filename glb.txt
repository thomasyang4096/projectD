<!DOCTYPE html>
<html lang="zh-TW">
<head>
  <meta charset="UTF-8">
  <title>GLB + 紅色箭頭範例</title>
  <style> body { margin:0; overflow:hidden; background:#111; } </style>

  <script type="importmap">
  {
    "imports": {
      "three": "https://cdn.jsdelivr.net/npm/three@0.160.0/build/three.module.js",
      "three/examples/": "https://cdn.jsdelivr.net/npm/three@0.160.0/examples/jsm/"
    }
  }
  </script>
</head>
<body>
<script type="module">
import * as THREE from 'three';
import { OrbitControls } from 'three/examples/controls/OrbitControls.js';
import { GLTFLoader } from 'three/examples/loaders/GLTFLoader.js';

// === 場景、相機、渲染器 ===
const scene = new THREE.Scene();
scene.background = new THREE.Color(0x111111);
const camera = new THREE.PerspectiveCamera(60, window.innerWidth/window.innerHeight, 0.1, 5000);
camera.position.set(5, 5, 5);

const renderer = new THREE.WebGLRenderer({ antialias:true });
renderer.setSize(window.innerWidth, window.innerHeight);
document.body.appendChild(renderer.domElement);

// === 控制器 ===
const controls = new OrbitControls(camera, renderer.domElement);
controls.enableDamping = true;

// === 光源 ===
scene.add(new THREE.AmbientLight(0xffffff, 0.7));
const dirLight = new THREE.DirectionalLight(0xffffff, 1);
dirLight.position.set(10, 10, 10);
scene.add(dirLight);

// === 輔助工具 ===
scene.add(new THREE.GridHelper(10, 10));
scene.add(new THREE.AxesHelper(2));

// === 載入 GLB 模型 ===
const loader = new GLTFLoader();
loader.load('3d/abc.glb', (gltf) => {
    const model = gltf.scene;
    scene.add(model);

    // -------------------------------
    // 在模型局部座標加紅色箭頭
    // -------------------------------
    const from = new THREE.Vector3(0, 0, 0);        // 箭頭起點
    const dir = new THREE.Vector3(0, 1, 0).normalize();  // 箭頭方向
    const length = 2;                               // 箭頭長度
    const color = 0xff0000;                         // 紅色
    const arrow = new THREE.ArrowHelper(dir, from, length, color);

    // 把箭頭加入模型，隨模型移動
    model.add(arrow);

    // 調整箭頭在模型上的位置
    arrow.position.set(1, 0.5, -1);


    // -------------------------------
    // 在箭頭上加光暈球 (Shader)
    // -------------------------------
    const glowGeo = new THREE.SphereGeometry(0.3, 32, 32);
    const glowMat = new THREE.ShaderMaterial({
        uniforms: { glowColor: { value: new THREE.Color(0x00ff00) } },
        vertexShader: `
            varying vec3 vPos;
            void main() {
                vPos = position;
                gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);
            }
        `,
        fragmentShader: `
            uniform vec3 glowColor;
            varying vec3 vPos;
            void main() {
                float intensity = 1.0 - length(vPos) / 0.3; // 球心亮, 外圍淡
                intensity = clamp(intensity, 0.0, 1.0);
                gl_FragColor = vec4(glowColor, intensity);
            }
        `,
        transparent: true,
        blending: THREE.AdditiveBlending,
        depthWrite: false
    });
    const glow = new THREE.Mesh(glowGeo, glowMat);
    arrow.add(glow);
    glow.position.set(0, 2, 0); // 箭頭頂端





});

// === 調整視窗大小 ===
window.addEventListener('resize', () => {
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight);
});

// === 動畫迴圈 ===
function animate() {
    requestAnimationFrame(animate);
    controls.update();
    renderer.render(scene, camera);
}
animate();
</script>
</body>
</html>
